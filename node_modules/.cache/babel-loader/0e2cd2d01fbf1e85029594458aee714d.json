{"ast":null,"code":"var _jsxFileName = \"/Users/sarp.usulu/Desktop/web_development/react_trades_exercise/src/agGrid/agGrid.tsx\";\nimport React from \"react\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\"; // import {Grid, GridOptions} from \"@ag-grid-community/all-modules\";\n\nimport _ from \"lodash\";\nimport { withRouter } from \"react-router-dom\";\nimport css_classes from \"./agGrid.module.css\";\n\nclass SymbolGrid extends React.Component {\n  // state = {\n  //   col_definitions: [\n  //     {\n  //       headerName: \"Symbol\",\n  //       field: \"symbol\"\n  //     },\n  //     {\n  //       headerName: \"Time\",\n  //       field: \"time\"\n  //     },\n  //     {\n  //       headerName: \"Quantity\",\n  //       field: \"qty\"\n  //     },\n  //     {\n  //       headerName: \"Price\",\n  //       field: \"price\"\n  //     },\n  //     {\n  //       headerName: \"Amount\",\n  //       field: \"amount\"\n  //     }\n  //   ],\n  //   trades_for_symbol: null\n  // };\n  // state = {\n  //   trades_for_symbol: \"\"\n  // };\n  constructor(props) {\n    super(props);\n\n    this.exit_handler = () => {\n      this.props.history.push(\"/\");\n    };\n\n    this.state = {\n      trades_for_symbol: [{\n        symbol: \"GOOGL\",\n        qty: 621,\n        price: 25.15590870261679,\n        time: \"3:06:07 AM\"\n      }]\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      trades_for_symbol: _.orderBy(_.filter(this.props.trades, [\"symbol\", this.props.match.params.symbol]), [\"time\"], [\"asc\"])\n    });\n  }\n\n  render() {\n    const col_definitions = [{\n      headerName: \"Symbol\",\n      field: \"symbol\"\n    }, {\n      headerName: \"Time\",\n      field: \"time\"\n    }, {\n      headerName: \"Quantity\",\n      field: \"qty\"\n    }, {\n      headerName: \"Price\",\n      field: \"price\"\n    }, {\n      headerName: \"Amount\",\n      field: \"amount\"\n    }];\n    return React.createElement(\"div\", {\n      className: css_classes.centered_grid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: css_classes.above_the_grid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: css_classes.trades_for_symbol_header,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Trades for \", this.props.match.params.symbol), React.createElement(\"button\", {\n      className: css_classes.active_green_button,\n      onClick: this.exit_handler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Exit\")), React.createElement(\"div\", {\n      className: \"ag-theme-balham\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(AgGridReact, {\n      columnDefs: col_definitions,\n      rowData: this.state.trades_for_symbol,\n      domLayout: \"autoHeight\",\n      rowHeight: 50,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRouter(SymbolGrid);","map":{"version":3,"sources":["/Users/sarp.usulu/Desktop/web_development/react_trades_exercise/src/agGrid/agGrid.tsx"],"names":["React","AgGridReact","_","withRouter","css_classes","SymbolGrid","Component","constructor","props","exit_handler","history","push","state","trades_for_symbol","symbol","qty","price","time","componentDidMount","setState","orderBy","filter","trades","match","params","render","col_definitions","headerName","field","centered_grid","above_the_grid","trades_for_symbol_header","active_green_button"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-balham.css\";\n// import {Grid, GridOptions} from \"@ag-grid-community/all-modules\";\nimport _ from \"lodash\";\nimport { withRouter } from \"react-router-dom\";\nimport css_classes from \"./agGrid.module.css\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\ninterface state_type {\n  trades_for_symbol: {\n    symbol: string;\n    qty: number;\n    price: number;\n    time: string;\n  }[];\n}\n\ninterface Props_from_parent {\n  trades: { symbol: string; qty: number; price: number; time: string }[];\n}\n\ninterface Routing_props {\n  symbol: string;\n}\n\ntype Props = Props_from_parent & RouteComponentProps<Routing_props>;\n\nclass SymbolGrid extends React.Component<Props, state_type> {\n  // state = {\n  //   col_definitions: [\n  //     {\n  //       headerName: \"Symbol\",\n  //       field: \"symbol\"\n  //     },\n  //     {\n  //       headerName: \"Time\",\n  //       field: \"time\"\n  //     },\n  //     {\n  //       headerName: \"Quantity\",\n  //       field: \"qty\"\n  //     },\n  //     {\n  //       headerName: \"Price\",\n  //       field: \"price\"\n  //     },\n  //     {\n  //       headerName: \"Amount\",\n  //       field: \"amount\"\n  //     }\n  //   ],\n  //   trades_for_symbol: null\n  // };\n\n  // state = {\n  //   trades_for_symbol: \"\"\n  // };\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      trades_for_symbol: [\n        {\n          symbol: \"GOOGL\",\n          qty: 621,\n          price: 25.15590870261679,\n          time: \"3:06:07 AM\"\n        }\n      ]\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      trades_for_symbol: _.orderBy(\n        _.filter(this.props.trades, [\"symbol\", this.props.match.params.symbol]),\n        [\"time\"],\n        [\"asc\"]\n      )\n    });\n  }\n\n  exit_handler = () => {\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const col_definitions = [\n      {\n        headerName: \"Symbol\",\n        field: \"symbol\"\n      },\n      {\n        headerName: \"Time\",\n        field: \"time\"\n      },\n      {\n        headerName: \"Quantity\",\n        field: \"qty\"\n      },\n      {\n        headerName: \"Price\",\n        field: \"price\"\n      },\n      {\n        headerName: \"Amount\",\n        field: \"amount\"\n      }\n    ];\n    return (\n      <div className={css_classes.centered_grid}>\n        <div className={css_classes.above_the_grid}>\n          <h1 className={css_classes.trades_for_symbol_header}>\n            Trades for {this.props.match.params.symbol}\n          </h1>\n          <button\n            className={css_classes.active_green_button}\n            onClick={this.exit_handler}\n          >\n            Exit\n          </button>\n        </div>\n\n        <div className=\"ag-theme-balham\">\n          <AgGridReact\n            columnDefs={col_definitions}\n            rowData={this.state.trades_for_symbol}\n            domLayout=\"autoHeight\"\n            rowHeight={50}\n          ></AgGridReact>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SymbolGrid);\n"]},"metadata":{},"sourceType":"module"}