{"ast":null,"code":"var _jsxFileName = \"/Users/sarp.usulu/Desktop/react_trades_exercise/src/highcharts/highcharts_pie.tsx\";\nimport React from \"react\";\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport css_classes from \"./highcharts_pie.module.css\";\nimport { Link } from \"react-router-dom\";\n\nconst PieChart = props => {\n  let pie_data_objects = []; //turning props into an array of objects that works with highcharts\n\n  for (let i = 0; i < props.symbols.length; i += 1) {\n    pie_data_objects.push({\n      name: props.symbols[i],\n      y: props.quantities[i]\n    });\n  } //highcharts options\n\n\n  const options = {\n    chart: {\n      type: \"pie\"\n    },\n    title: {\n      text: \"\"\n    },\n    legend: {\n      bubbleLegend: {\n        enabled: true\n      }\n    },\n    series: [{\n      name: \"Trades\",\n      data: pie_data_objects,\n      size: \"100%\",\n      innerSize: \"80%\",\n      cursor: \"pointer\",\n      events: {\n        //click on pie chart to navigate to agGrid\n        click: function (event) {\n          props.history.push(\"/detail/\" + event.point.name);\n        }\n      }\n    }],\n    plotOptions: {\n      pie: {\n        cursor: \"pointer\",\n        dataLabels: {\n          enabled: false\n        },\n        showInLegend: true\n      },\n      column: {\n        states: {\n          hover: {\n            color: {\n              pattern: {\n                path: {\n                  d: \"M 3 3 L 8 3 L 8 8 Z\",\n                  fill: \"#102045\"\n                },\n                width: 12,\n                height: 12,\n                color: \"#907000\",\n                opacity: 0.5\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n  return React.createElement(\"div\", {\n    className: css_classes.pie_chart_main_div,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(HighchartsReact, {\n    highcharts: Highcharts,\n    constructorType: \"chart\",\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: \"/addTrade\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: css_classes.add_trade_button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"+ Add Trade\")));\n};\n\nexport default PieChart;","map":{"version":3,"sources":["/Users/sarp.usulu/Desktop/react_trades_exercise/src/highcharts/highcharts_pie.tsx"],"names":["React","Highcharts","HighchartsReact","css_classes","Link","PieChart","props","pie_data_objects","i","symbols","length","push","name","y","quantities","options","chart","type","title","text","legend","bubbleLegend","enabled","series","data","size","innerSize","cursor","events","click","event","history","point","plotOptions","pie","dataLabels","showInLegend","column","states","hover","color","pattern","path","d","fill","width","height","opacity","pie_chart_main_div","add_trade_button"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAASC,IAAT,QAA0C,kBAA1C;;AAWA,MAAMC,QAAmC,GAAGC,KAAK,IAAI;AACnD,MAAIC,gBAAgB,GAAG,EAAvB,CADmD,CAGnD;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,OAAN,CAAcC,MAAlC,EAA0CF,CAAC,IAAI,CAA/C,EAAkD;AAChDD,IAAAA,gBAAgB,CAACI,IAAjB,CAAsB;AACpBC,MAAAA,IAAI,EAAEN,KAAK,CAACG,OAAN,CAAcD,CAAd,CADc;AAEpBK,MAAAA,CAAC,EAAEP,KAAK,CAACQ,UAAN,CAAiBN,CAAjB;AAFiB,KAAtB;AAID,GATkD,CAWnD;;;AACA,QAAMO,OAA2B,GAAG;AAClCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AADD,KAD2B;AAIlCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AADD,KAJ2B;AAOlCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,YAAY,EAAE;AACZC,QAAAA,OAAO,EAAE;AADG;AADR,KAP0B;AAYlCC,IAAAA,MAAM,EAAE,CACN;AACEX,MAAAA,IAAI,EAAE,QADR;AAEEY,MAAAA,IAAI,EAAEjB,gBAFR;AAGEkB,MAAAA,IAAI,EAAE,MAHR;AAIEC,MAAAA,SAAS,EAAE,KAJb;AAKEC,MAAAA,MAAM,EAAE,SALV;AAMEC,MAAAA,MAAM,EAAE;AACN;AACAC,QAAAA,KAAK,EAAE,UAASC,KAAT,EAA6C;AAClDxB,UAAAA,KAAK,CAACyB,OAAN,CAAcpB,IAAd,CAAmB,aAAamB,KAAK,CAACE,KAAN,CAAYpB,IAA5C;AACD;AAJK;AANV,KADM,CAZ0B;AA2BlCqB,IAAAA,WAAW,EAAE;AACXC,MAAAA,GAAG,EAAE;AACHP,QAAAA,MAAM,EAAE,SADL;AAEHQ,QAAAA,UAAU,EAAE;AACVb,UAAAA,OAAO,EAAE;AADC,SAFT;AAKHc,QAAAA,YAAY,EAAE;AALX,OADM;AAQXC,MAAAA,MAAM,EAAE;AACNC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE;AACLC,YAAAA,KAAK,EAAE;AACLC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,IAAI,EAAE;AACJC,kBAAAA,CAAC,EAAE,qBADC;AAEJC,kBAAAA,IAAI,EAAE;AAFF,iBADC;AAKPC,gBAAAA,KAAK,EAAE,EALA;AAMPC,gBAAAA,MAAM,EAAE,EAND;AAOPN,gBAAAA,KAAK,EAAE,SAPA;AAQPO,gBAAAA,OAAO,EAAE;AARF;AADJ;AADF;AADD;AADF;AARG;AA3BqB,GAApC;AAwDA,SACE;AAAK,IAAA,SAAS,EAAE5C,WAAW,CAAC6C,kBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AACE,IAAA,UAAU,EAAE/C,UADd;AAEE,IAAA,eAAe,EAAE,OAFnB;AAGE,IAAA,OAAO,EAAEc,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAEZ,WAAW,CAAC8C,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CANF,CADF;AAYD,CAhFD;;AAkFA,eAAe5C,QAAf","sourcesContent":["import React from \"react\";\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport css_classes from \"./highcharts_pie.module.css\";\nimport { Link, RouteComponentProps } from \"react-router-dom\";\nimport { Column } from \"ag-grid-community\";\n\n// extend RouteComponentProps which has types of routing related components such as history and match\ninterface component_props extends RouteComponentProps<any> {\n  symbols: string[];\n  percentages: number[];\n  amounts: number[];\n  quantities: number[];\n}\n\nconst PieChart: React.FC<component_props> = props => {\n  let pie_data_objects = [];\n\n  //turning props into an array of objects that works with highcharts\n  for (let i = 0; i < props.symbols.length; i += 1) {\n    pie_data_objects.push({\n      name: props.symbols[i],\n      y: props.quantities[i]\n    });\n  }\n\n  //highcharts options\n  const options: Highcharts.Options = {\n    chart: {\n      type: \"pie\"\n    },\n    title: {\n      text: \"\"\n    },\n    legend: {\n      bubbleLegend: {\n        enabled: true\n      }\n    },\n    series: [\n      {\n        name: \"Trades\",\n        data: pie_data_objects as Highcharts.SeriesOptionsType[],\n        size: \"100%\",\n        innerSize: \"80%\",\n        cursor: \"pointer\",\n        events: {\n          //click on pie chart to navigate to agGrid\n          click: function(event: { point: { name: string } }) {\n            props.history.push(\"/detail/\" + event.point.name);\n          }\n        }\n      }\n    ] as any,\n    plotOptions: {\n      pie: {\n        cursor: \"pointer\",\n        dataLabels: {\n          enabled: false\n        },\n        showInLegend: true\n      },\n      column: {\n        states: {\n          hover: {\n            color: {\n              pattern: {\n                path: {\n                  d: \"M 3 3 L 8 3 L 8 8 Z\",\n                  fill: \"#102045\"\n                },\n                width: 12,\n                height: 12,\n                color: \"#907000\",\n                opacity: 0.5\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  return (\n    <div className={css_classes.pie_chart_main_div}>\n      <HighchartsReact\n        highcharts={Highcharts}\n        constructorType={\"chart\"}\n        options={options}\n      />\n      <Link to=\"/addTrade\">\n        <button className={css_classes.add_trade_button}>+ Add Trade</button>\n      </Link>\n    </div>\n  );\n};\n\nexport default PieChart;\n"]},"metadata":{},"sourceType":"module"}